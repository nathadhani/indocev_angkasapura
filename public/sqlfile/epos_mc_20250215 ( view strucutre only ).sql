/*
 Navicat Premium Data Transfer

 Source Server         : mySQL
 Source Server Type    : MySQL
 Source Server Version : 80030
 Source Host           : localhost:3306
 Source Schema         : epos_mc

 Target Server Type    : MySQL
 Target Server Version : 80030
 File Encoding         : 65001

 Date: 16/02/2025 15:37:33
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;


-- ----------------------------
-- View structure for v_auth_group_role
-- ----------------------------
DROP VIEW IF EXISTS `v_auth_group_role`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_auth_group_role` AS select `auth_group_role`.`id` AS `id`,`auth_group_role`.`usergroup_id` AS `usergroup_id`,`auth_group_role`.`controller` AS `controller`,`auth_group_role`.`method` AS `method`,`auth_group_role`.`info` AS `info`,`auth_group_role`.`status` AS `status`,`auth_group_role`.`created` AS `created`,`auth_group_role`.`createdby` AS `createdby`,`auth_group_role`.`updated` AS `updated`,`auth_group_role`.`updatedby` AS `updatedby`,concat(concat(`auth_group_role`.`controller`,'::'),`auth_group_role`.`method`) AS `classmethod`,`auth_usergroup`.`usergroupname` AS `usergroupname` from (`auth_group_role` left join `auth_usergroup` on((`auth_group_role`.`usergroup_id` = `auth_usergroup`.`id`)));

-- ----------------------------
-- View structure for v_auth_listmethod
-- ----------------------------
DROP VIEW IF EXISTS `v_auth_listmethod`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_auth_listmethod` AS select `auth_listmethod`.`id` AS `id`,`auth_listmethod`.`controller` AS `controller`,`auth_listmethod`.`method` AS `method`,`auth_listmethod`.`info` AS `info`,`auth_listmethod`.`path` AS `path`,`auth_listmethod`.`created` AS `created`,`auth_listmethod`.`createdby` AS `createdby`,concat(`auth_listmethod`.`controller`,'::',`auth_listmethod`.`method`) AS `classmethod`,`auth_users`.`username` AS `username` from (`auth_listmethod` left join `auth_users` on((`auth_listmethod`.`id` = `auth_users`.`id`)));

-- ----------------------------
-- View structure for v_auth_menu_group
-- ----------------------------
DROP VIEW IF EXISTS `v_auth_menu_group`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_auth_menu_group` AS select `t1`.`id` AS `id`,`t1`.`usergroup_id` AS `usergroup_id`,`t1`.`menu_id` AS `menu_id`,`t1`.`parent_id` AS `parent_id`,`t1`.`menuorder` AS `menuorder`,`t1`.`status` AS `status`,if(((select count(`t2`.`parent_id`) from `auth_menu_group` `t2` where ((`t2`.`parent_id` = `t1`.`menu_id`) and (`t2`.`usergroup_id` = `t1`.`usergroup_id`))) > 0),1,0) AS `h_child` from `auth_menu_group` `t1`;

-- ----------------------------
-- View structure for v_auth_menu_group_create
-- ----------------------------
DROP VIEW IF EXISTS `v_auth_menu_group_create`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_auth_menu_group_create` AS select `v_auth_menu_group`.`id` AS `id`,`v_auth_menu_group`.`usergroup_id` AS `usergroup_id`,`v_auth_menu_group`.`menu_id` AS `menu_id`,`v_auth_menu_group`.`parent_id` AS `parent_id`,`v_auth_menu_group`.`menuorder` AS `menuorder`,`v_auth_menu_group`.`status` AS `status`,`v_auth_menu_group`.`h_child` AS `h_child`,`auth_menu`.`menu` AS `menu`,`menu_1`.`menu` AS `parent`,`auth_usergroup`.`usergroupname` AS `usergroupname`,`auth_menu`.`icon` AS `icon`,`auth_menu`.`link` AS `link` from (((`v_auth_menu_group` left join `auth_usergroup` on((`v_auth_menu_group`.`usergroup_id` = `auth_usergroup`.`id`))) left join `auth_menu` on((`v_auth_menu_group`.`menu_id` = `auth_menu`.`id`))) left join `auth_menu` `menu_1` on((`v_auth_menu_group`.`parent_id` = `menu_1`.`id`)));

-- ----------------------------
-- View structure for v_auth_region
-- ----------------------------
DROP VIEW IF EXISTS `v_auth_region`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_auth_region` AS select `t`.`id` AS `user_id`,`t`.`fullname` AS `fullname`,`s`.`id` AS `company_id`,`s`.`company_name` AS `company_name`,group_concat(`s`.`company_address` separator ',') AS `company_address` from (`auth_users` `t` join `m_company` `s` on((0 <> find_in_set(`s`.`id`,`t`.`region`)))) group by `s`.`id`;

-- ----------------------------
-- View structure for v_auth_users
-- ----------------------------
DROP VIEW IF EXISTS `v_auth_users`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_auth_users` AS select `auth_users`.`id` AS `id`,`auth_users`.`username` AS `username`,`auth_users`.`password` AS `password`,`auth_users`.`company_id` AS `company_id`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company`.`company_city` AS `company_city`,`m_company`.`company_type` AS `company_type`,`m_company`.`api_method` AS `api_method`,`m_company`.`api_angkasapura` AS `api_angkasapura`,`m_company`.`api_username` AS `api_username`,`m_company`.`api_password` AS `api_password`,`auth_users`.`usergroup_id` AS `usergroup_id`,`auth_usergroup`.`usergroupname` AS `usergroupname`,`auth_users`.`userlevel_id` AS `userlevel_id`,`auth_userlevel`.`userlevelname` AS `userlevelname`,`auth_users`.`fullname` AS `fullname`,`auth_users`.`email` AS `email`,`auth_users`.`celluler` AS `celluler`,`auth_users`.`region` AS `region`,(select concat('[',group_concat('{"id":"',`v_auth_region`.`company_id`,'","company_address":"',`v_auth_region`.`company_address`,'"}' separator ','),']') from `v_auth_region` where (`v_auth_region`.`user_id` = `auth_users`.`id`)) AS `region_code`,`auth_users`.`status` AS `status`,`auth_users`.`lastlog` AS `lastlog`,`auth_users`.`chgpass` AS `chgpass`,`auth_users`.`created` AS `created`,`auth_users`.`updated` AS `updated`,`auth_users`.`createdby` AS `createdby`,`auth_users`.`updatedby` AS `updatedby` from (((`auth_users` left join `auth_usergroup` on((`auth_users`.`usergroup_id` = `auth_usergroup`.`id`))) left join `auth_userlevel` on((`auth_users`.`userlevel_id` = `auth_userlevel`.`id`))) left join `m_company` on((`auth_users`.`company_id` = `m_company`.`id`)));

-- ----------------------------
-- View structure for v_inventory_detail
-- ----------------------------
DROP VIEW IF EXISTS `v_inventory_detail`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_inventory_detail` AS select `inventory_detail`.`id` AS `id`,`inventory_detail`.`header_id` AS `header_id`,`inventory_detail`.`sequence` AS `sequence`,`inventory_detail`.`valas_id` AS `valas_id`,`inventory_detail`.`nominal` AS `nominal`,`inventory_detail`.`sheet` AS `sheet`,`inventory_detail`.`price` AS `price`,`inventory_detail`.`subtotal` AS `subtotal`,`inventory_detail`.`status` AS `status`,`inventory_detail`.`created` AS `created`,`inventory_detail`.`updated` AS `updated`,`inventory_detail`.`createdby` AS `createdby`,`inventory_detail`.`updatedby` AS `updatedby`,`inventory_header`.`company_id` AS `company_id`,`inventory_header`.`store_id` AS `store_id`,`inventory_header`.`tr_id` AS `tr_id`,`inventory_header`.`tr_date` AS `tr_date`,`inventory_header`.`tr_number` AS `tr_number`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name` from ((`inventory_detail` left join `m_valas` on((`inventory_detail`.`valas_id` = `m_valas`.`id`))) join `inventory_header` on((`inventory_detail`.`header_id` = `inventory_header`.`id`)));

-- ----------------------------
-- View structure for v_inventory_header
-- ----------------------------
DROP VIEW IF EXISTS `v_inventory_header`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_inventory_header` AS select `inventory_header`.`id` AS `id`,`inventory_header`.`company_id` AS `company_id`,`inventory_header`.`store_id` AS `store_id`,`inventory_header`.`tr_id` AS `tr_id`,`inventory_header`.`tr_date` AS `tr_date`,`inventory_header`.`tr_number` AS `tr_number`,`inventory_header`.`tr_description` AS `tr_description`,`inventory_header`.`status` AS `status`,`inventory_header`.`created` AS `created`,`inventory_header`.`updated` AS `updated`,`inventory_header`.`createdby` AS `createdby`,`inventory_header`.`updatedby` AS `updatedby`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,(select (case when (`inventory_header`.`status` = 3) then 'Closed' when (`inventory_header`.`status` = 2) then 'Canceled' else '' end)) AS `status_name`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((((`inventory_header` left join `m_company_store` on((`inventory_header`.`store_id` = `m_company_store`.`id`))) left join `m_company` on((`inventory_header`.`company_id` = `m_company`.`id`))) left join `auth_users` `usr1` on((`inventory_header`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`inventory_header`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_loga
-- ----------------------------
DROP VIEW IF EXISTS `v_loga`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_loga` AS select `log_a`.`id` AS `id`,`log_a`.`tr_id` AS `tr_id`,`log_a`.`tr_date` AS `tr_date`,`log_a`.`tr_number` AS `tr_number`,`log_a`.`customer_id` AS `customer_id`,`m_customer`.`customer_code` AS `customer_code`,`m_customer`.`customer_name` AS `customer_name`,`m_customer`.`customer_address` AS `customer_address`,`m_nationality`.`nationality_code` AS `nationality_code`,`log_a`.`payment_type_id` AS `payment_type_id`,`m_payment_type`.`payment_type_name` AS `payment_type_name`,`log_a`.`flight_destination` AS `flight_destination`,`flight_destination`.`airport_code` AS `flight_destination_code`,`flight_destination`.`airport_desc` AS `flight_destination_desc`,`log_a`.`flight_barcode` AS `flight_barcode`,`log_a`.`flight_no` AS `flight_no`,`log_a`.`tr_description` AS `tr_description`,`log_a`.`cashier_id` AS `cashier_id`,`usr1`.`fullname` AS `cashier_name`,`log_a`.`company_id` AS `company_id`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company`.`company_city` AS `company_city`,`m_company`.`company_type` AS `company_type`,`m_company_store`.`airport_id` AS `airport_id`,`m_airport`.`airport_code` AS `airport_code`,`m_airport`.`airport_desc` AS `airport_desc`,`m_company_store`.`airport_terminal` AS `airport_terminal`,`log_a`.`store_id` AS `store_id`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`m_company_store`.`store_reference_id` AS `store_reference_id`,`m_transaction`.`title` AS `tr_title`,`log_a`.`status` AS `status`,(select (case when (`log_a`.`status` = 3) then 'Closed' when (`log_a`.`status` = 2) then 'Canceled' else 'Open' end)) AS `status_name`,`log_a`.`created` AS `created`,`log_a`.`updated` AS `updated`,`log_a`.`createdby` AS `createdby`,`log_a`.`updatedby` AS `updatedby`,`usr2`.`fullname` AS `createdby_name`,`usr3`.`fullname` AS `updatedby_name` from (((((((((((`log_a` join `m_transaction` on((`log_a`.`tr_id` = `m_transaction`.`id`))) join `auth_users` `usr1` on((`log_a`.`cashier_id` = `usr1`.`id`))) join `auth_users` `usr2` on((`log_a`.`createdby` = `usr2`.`id`))) left join `auth_users` `usr3` on((`log_a`.`updatedby` = `usr3`.`id`))) join `m_customer` on((`log_a`.`customer_id` = `m_customer`.`id`))) left join `m_nationality` on((`m_customer`.`nationality_id` = `m_nationality`.`id`))) join `m_company` on((`log_a`.`company_id` = `m_company`.`id`))) left join `m_airport` `flight_destination` on((`flight_destination`.`id` = `log_a`.`flight_destination`))) join `m_company_store` on((`m_company_store`.`id` = `log_a`.`store_id`))) join `m_airport` on((`m_airport`.`id` = `m_company_store`.`airport_id`))) join `m_payment_type` on((`m_payment_type`.`id` = `log_a`.`payment_type_id`)));

-- ----------------------------
-- View structure for v_logb
-- ----------------------------
DROP VIEW IF EXISTS `v_logb`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_logb` AS select `log_b`.`id` AS `id`,`log_b`.`sequence` AS `sequence`,`log_b`.`valas_id` AS `valas_id`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`log_b`.`nominal` AS `nominal`,`log_b`.`sheet` AS `sheet`,`log_b`.`price` AS `price`,`log_b`.`subtotal` AS `subtotal`,`log_b`.`status` AS `status`,`log_b`.`header_id` AS `header_id`,`log_a`.`tr_id` AS `tr_id`,`log_a`.`tr_date` AS `tr_date`,`log_a`.`company_id` AS `company_id`,`log_a`.`store_id` AS `store_id`,`log_a`.`customer_id` AS `customer_id`,`log_b`.`created` AS `created`,`log_b`.`updated` AS `updated`,`log_b`.`createdby` AS `createdby`,`log_b`.`updatedby` AS `updatedby` from ((`log_b` join `log_a` on((`log_b`.`header_id` = `log_a`.`id`))) left join `m_valas` on((`log_b`.`valas_id` = `m_valas`.`id`)));

-- ----------------------------
-- View structure for v_m_airport
-- ----------------------------
DROP VIEW IF EXISTS `v_m_airport`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_airport` AS select `m_airport`.`id` AS `id`,`m_airport`.`airport_code` AS `airport_code`,`m_airport`.`airport_desc` AS `airport_desc`,`m_airport`.`status` AS `status`,`m_airport`.`created` AS `created`,`m_airport`.`updated` AS `updated`,`m_airport`.`createdby` AS `createdby`,`m_airport`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_airport` left join `auth_users` `usr1` on((`m_airport`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_airport`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_company
-- ----------------------------
DROP VIEW IF EXISTS `v_m_company`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_company` AS select `m_company`.`id` AS `id`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company`.`company_phone` AS `company_phone`,`m_company`.`company_city` AS `company_city`,`m_company`.`company_pos_code` AS `company_pos_code`,`m_company`.`company_email` AS `company_email`,`m_company`.`company_type` AS `company_type`,`m_company`.`user_limits` AS `user_limits`,`m_company`.`api_method` AS `api_method`,`m_company`.`api_angkasapura` AS `api_angkasapura`,`m_company`.`api_username` AS `api_username`,`m_company`.`api_password` AS `api_password`,`m_company`.`status` AS `status`,`m_company`.`created` AS `created`,`m_company`.`updated` AS `updated`,`m_company`.`createdby` AS `createdby`,`m_company`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_company` join `auth_users` `usr1` on((`m_company`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_company`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_company_store
-- ----------------------------
DROP VIEW IF EXISTS `v_m_company_store`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_company_store` AS select `m_company_store`.`id` AS `id`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`m_company_store`.`store_reference_id` AS `store_reference_id`,`m_company_store`.`store_reference_name` AS `store_reference_name`,`m_company_store`.`store_reference_address` AS `store_reference_address`,`m_company_store`.`store_reference_terminal` AS `store_reference_terminal`,`m_company_store`.`company_id` AS `company_id`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company`.`company_city` AS `company_city`,`m_company`.`company_type` AS `company_type`,`m_company`.`api_angkasapura` AS `api_angkasapura`,`m_company_store`.`airport_id` AS `airport_id`,`m_airport`.`airport_code` AS `airport_code`,`m_airport`.`airport_desc` AS `airport_desc`,`m_company_store`.`airport_terminal` AS `airport_terminal`,`m_company_store`.`register_status` AS `register_status`,`m_company`.`status` AS `status`,`m_company`.`created` AS `created`,`m_company`.`updated` AS `updated`,`m_company`.`createdby` AS `createdby`,`m_company`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((((`m_company_store` join `m_company` on((`m_company_store`.`company_id` = `m_company`.`id`))) left join `m_airport` on((`m_airport`.`id` = `m_company_store`.`airport_id`))) join `auth_users` `usr1` on((`m_company_store`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_company_store`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_customer
-- ----------------------------
DROP VIEW IF EXISTS `v_m_customer`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_customer` AS select `m_customer`.`id` AS `id`,`m_customer`.`customer_code` AS `customer_code`,`m_customer`.`customer_name` AS `customer_name`,`m_customer`.`customer_nick_name` AS `customer_nick_name`,`m_customer`.`customer_handphone` AS `customer_handphone`,`m_customer`.`customer_phone` AS `customer_phone`,`m_customer`.`customer_address` AS `customer_address`,`m_customer`.`rt_rw` AS `rt_rw`,`m_customer`.`village` AS `village`,`m_customer`.`sub_district` AS `sub_district`,`m_customer`.`city` AS `city`,`m_customer`.`placeofbirth` AS `placeofbirth`,`m_customer`.`bornday` AS `bornday`,`m_customer`.`gender_id` AS `gender_id`,(select (case when (`m_customer`.`gender_id` = 1) then 'Laki - Laki' when (`m_customer`.`gender_id` = 2) then 'Perempuan' else NULL end)) AS `gender_name`,`m_customer`.`work_id` AS `work_id`,`m_customer_work`.`customer_work_name` AS `customer_work_name`,`m_customer`.`customer_type_id` AS `customer_type_id`,`m_customer_type`.`customer_type_name` AS `customer_type_name`,`m_customer`.`customer_data_id` AS `customer_data_id`,`m_customer_data`.`customer_data_name` AS `customer_data_name`,`m_customer`.`customer_data_number` AS `customer_data_number`,`m_customer`.`nationality_id` AS `nationality_id`,`m_nationality`.`nationality_code` AS `nationality_code`,`m_customer`.`npwp_number` AS `npwp_number`,`m_customer`.`npwp_name` AS `npwp_name`,`m_customer`.`customerprofil` AS `customerprofil`,`m_customer`.`kode_densus_dttot` AS `kode_densus_dttot`,`m_customer`.`company_id` AS `company_id`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_customer`.`status` AS `status`,`m_customer`.`created` AS `created`,`m_customer`.`updated` AS `updated`,`m_customer`.`createdby` AS `createdby`,`m_customer`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from (((((((`m_customer` join `m_company` on((`m_customer`.`company_id` = `m_company`.`id`))) left join `auth_users` `usr1` on((`m_customer`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_customer`.`updatedby` = `usr2`.`id`))) left join `m_customer_type` on((`m_customer`.`customer_type_id` = `m_customer_type`.`id`))) left join `m_customer_data` on((`m_customer`.`customer_data_id` = `m_customer_data`.`id`))) left join `m_nationality` on((`m_customer`.`nationality_id` = `m_nationality`.`id`))) left join `m_customer_work` on((`m_customer`.`work_id` = `m_customer_work`.`id`)));

-- ----------------------------
-- View structure for v_m_customer_data
-- ----------------------------
DROP VIEW IF EXISTS `v_m_customer_data`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_customer_data` AS select `m_customer_data`.`id` AS `id`,`m_customer_data`.`customer_data_name` AS `customer_data_name`,`m_customer_data`.`status` AS `status`,`m_customer_data`.`created` AS `created`,`m_customer_data`.`updated` AS `updated`,`m_customer_data`.`createdby` AS `createdby`,`m_customer_data`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_customer_data` left join `auth_users` `usr1` on((`m_customer_data`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_customer_data`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_customer_type
-- ----------------------------
DROP VIEW IF EXISTS `v_m_customer_type`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_customer_type` AS select `m_customer_type`.`id` AS `id`,`m_customer_type`.`customer_type_name` AS `customer_type_name`,`m_customer_type`.`status` AS `status`,`m_customer_type`.`created` AS `created`,`m_customer_type`.`updated` AS `updated`,`m_customer_type`.`createdby` AS `createdby`,`m_customer_type`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_customer_type` left join `auth_users` `usr1` on((`m_customer_type`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_customer_type`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_customer_work
-- ----------------------------
DROP VIEW IF EXISTS `v_m_customer_work`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_customer_work` AS select `m_customer_work`.`id` AS `id`,`m_customer_work`.`customer_work_name` AS `customer_work_name`,`m_customer_work`.`status` AS `status`,`m_customer_work`.`created` AS `created`,`m_customer_work`.`updated` AS `updated`,`m_customer_work`.`createdby` AS `createdby`,`m_customer_work`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_customer_work` left join `auth_users` `usr1` on((`m_customer_work`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_customer_work`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_nationality
-- ----------------------------
DROP VIEW IF EXISTS `v_m_nationality`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_nationality` AS select `m_nationality`.`id` AS `id`,`m_nationality`.`nationality_code` AS `nationality_code`,`m_nationality`.`nationality_desc` AS `nationality_desc`,`m_nationality`.`status` AS `status`,`m_nationality`.`created` AS `created`,`m_nationality`.`updated` AS `updated`,`m_nationality`.`createdby` AS `createdby`,`m_nationality`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_nationality` left join `auth_users` `usr1` on((`m_nationality`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_nationality`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_payment_type
-- ----------------------------
DROP VIEW IF EXISTS `v_m_payment_type`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_payment_type` AS select `m_payment_type`.`id` AS `id`,`m_payment_type`.`payment_type_name` AS `payment_type_name`,`m_payment_type`.`status` AS `status`,`m_payment_type`.`created` AS `created`,`m_payment_type`.`updated` AS `updated`,`m_payment_type`.`createdby` AS `createdby`,`m_payment_type`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_payment_type` left join `auth_users` `usr1` on((`m_payment_type`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_payment_type`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_transaction
-- ----------------------------
DROP VIEW IF EXISTS `v_m_transaction`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_transaction` AS select `m_transaction`.`id` AS `id`,`m_transaction`.`title` AS `title`,`m_transaction`.`description` AS `description`,`m_transaction`.`status` AS `status`,`m_transaction`.`created` AS `created`,`m_transaction`.`updated` AS `updated`,`m_transaction`.`createdby` AS `createdby`,`m_transaction`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_transaction` left join `auth_users` `usr1` on((`m_transaction`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_transaction`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_m_transaction_date
-- ----------------------------
DROP VIEW IF EXISTS `v_m_transaction_date`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_transaction_date` AS select `m_transaction_date`.`id` AS `id`,`m_company_store`.`company_id` AS `company_id`,`m_transaction_date`.`store_id` AS `store_id`,`m_company_store`.`airport_id` AS `airport_id`,`m_transaction_date`.`tr_id` AS `tr_id`,`m_transaction`.`title` AS `tr_title`,`m_transaction`.`description` AS `tr_description`,`m_transaction_date`.`tr_date` AS `tr_date`,`m_transaction_date`.`status` AS `status`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company`.`company_city` AS `company_city`,`m_company`.`company_type` AS `company_type`,`m_airport`.`airport_code` AS `airport_code`,`m_airport`.`airport_desc` AS `airport_desc`,`m_company_store`.`airport_terminal` AS `airport_terminal`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`m_company_store`.`store_reference_id` AS `store_reference_id`,`m_transaction_date`.`created` AS `created`,`m_transaction_date`.`updated` AS `updated`,`m_transaction_date`.`createdby` AS `createdby`,`m_transaction_date`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((((((`m_transaction_date` join `m_transaction` on((`m_transaction`.`id` = `m_transaction_date`.`tr_id`))) join `auth_users` `usr1` on((`usr1`.`id` = `m_transaction_date`.`createdby`))) left join `auth_users` `usr2` on((`usr2`.`id` = `m_transaction_date`.`updatedby`))) join `m_company_store` on((`m_company_store`.`id` = `m_transaction_date`.`store_id`))) join `m_company` on((`m_company_store`.`company_id` = `m_company`.`id`))) join `m_airport` on((`m_airport`.`id` = `m_company_store`.`airport_id`)));

-- ----------------------------
-- View structure for v_m_valas
-- ----------------------------
DROP VIEW IF EXISTS `v_m_valas`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_m_valas` AS select `m_valas`.`id` AS `id`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`m_valas`.`status` AS `status`,`m_valas`.`created` AS `created`,`m_valas`.`updated` AS `updated`,`m_valas`.`createdby` AS `createdby`,`m_valas`.`updatedby` AS `updatedby`,`usr1`.`fullname` AS `createdby_name`,`usr2`.`fullname` AS `updatedby_name` from ((`m_valas` left join `auth_users` `usr1` on((`m_valas`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`m_valas`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_rate_daily
-- ----------------------------
DROP VIEW IF EXISTS `v_rate_daily`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_rate_daily` AS select `rate_daily`.`id` AS `id`,`rate_daily`.`company_id` AS `company_id`,`rate_daily`.`valas_id` AS `valas_id`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`rate_daily`.`rate_date` AS `rate_date`,`rate_daily`.`rate_buy` AS `rate_buy`,`rate_daily`.`difference_buy` AS `difference_buy`,`rate_daily`.`rate_sale` AS `rate_sale`,`rate_daily`.`difference_sale` AS `difference_sale`,`rate_daily`.`price_buy_bot` AS `price_buy_bot`,`rate_daily`.`price_buy_top` AS `price_buy_top`,`rate_daily`.`price_sale_bot` AS `price_sale_bot`,`rate_daily`.`price_sale_top` AS `price_sale_top`,`rate_daily`.`status` AS `status`,`rate_daily`.`created` AS `created`,`rate_daily`.`updated` AS `updated`,`rate_daily`.`createdby` AS `createdby`,`usr1`.`fullname` AS `createdby_name`,`rate_daily`.`updatedby` AS `updatedby`,`usr2`.`fullname` AS `updatedby_name` from (((`rate_daily` left join `m_valas` on((`rate_daily`.`valas_id` = `m_valas`.`id`))) left join `auth_users` `usr1` on((`rate_daily`.`createdby` = `usr1`.`id`))) left join `auth_users` `usr2` on((`rate_daily`.`updatedby` = `usr2`.`id`)));

-- ----------------------------
-- View structure for v_stock1
-- ----------------------------
DROP VIEW IF EXISTS `v_stock1`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock1` AS select `inventory_header`.`company_id` AS `company_id`,`inventory_header`.`store_id` AS `store_id`,year(`inventory_header`.`tr_date`) AS `stock_year`,month(`inventory_header`.`tr_date`) AS `stock_month`,`inventory_header`.`tr_id` AS `tr_id`,`inventory_detail`.`valas_id` AS `valas_id`,`inventory_detail`.`nominal` AS `invin_nominal`,sum(`inventory_detail`.`sheet`) AS `invin_sheet` from (`inventory_detail` join `inventory_header` on((`inventory_detail`.`header_id` = `inventory_header`.`id`))) where ((`inventory_header`.`tr_id` = 3) and (`inventory_header`.`status` = 3)) group by `inventory_header`.`company_id`,`inventory_header`.`store_id`,year(`inventory_header`.`tr_date`),month(`inventory_header`.`tr_date`),`inventory_header`.`tr_id`,`inventory_detail`.`valas_id`,`inventory_detail`.`nominal`;

-- ----------------------------
-- View structure for v_stock2
-- ----------------------------
DROP VIEW IF EXISTS `v_stock2`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock2` AS select `inventory_header`.`company_id` AS `company_id`,`inventory_header`.`store_id` AS `store_id`,year(`inventory_header`.`tr_date`) AS `stock_year`,month(`inventory_header`.`tr_date`) AS `stock_month`,`inventory_header`.`tr_id` AS `tr_id`,`inventory_detail`.`valas_id` AS `valas_id`,`inventory_detail`.`nominal` AS `invout_nominal`,sum(`inventory_detail`.`sheet`) AS `invout_sheet` from (`inventory_detail` join `inventory_header` on((`inventory_detail`.`header_id` = `inventory_header`.`id`))) where ((`inventory_header`.`tr_id` = 4) and (`inventory_header`.`status` = 3)) group by `inventory_header`.`company_id`,`inventory_header`.`store_id`,year(`inventory_header`.`tr_date`),month(`inventory_header`.`tr_date`),`inventory_header`.`tr_id`,`inventory_detail`.`valas_id`,`inventory_detail`.`nominal`;

-- ----------------------------
-- View structure for v_stock3
-- ----------------------------
DROP VIEW IF EXISTS `v_stock3`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock3` AS select `tr_header`.`company_id` AS `company_id`,`tr_header`.`store_id` AS `store_id`,year(`tr_header`.`tr_date`) AS `stock_year`,month(`tr_header`.`tr_date`) AS `stock_month`,`tr_header`.`tr_id` AS `tr_id`,`tr_detail`.`valas_id` AS `valas_id`,`tr_detail`.`nominal` AS `buy_nominal`,sum(`tr_detail`.`sheet`) AS `buy_sheet` from (`tr_detail` join `tr_header` on((`tr_detail`.`header_id` = `tr_header`.`id`))) where ((`tr_header`.`tr_id` = 1) and (`tr_header`.`status` in (1,3,4))) group by `tr_header`.`company_id`,`tr_header`.`store_id`,year(`tr_header`.`tr_date`),month(`tr_header`.`tr_date`),`tr_header`.`tr_id`,`tr_detail`.`valas_id`,`tr_detail`.`nominal`;

-- ----------------------------
-- View structure for v_stock4
-- ----------------------------
DROP VIEW IF EXISTS `v_stock4`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock4` AS select `tr_header`.`company_id` AS `company_id`,`tr_header`.`store_id` AS `store_id`,year(`tr_header`.`tr_date`) AS `stock_year`,month(`tr_header`.`tr_date`) AS `stock_month`,`tr_header`.`tr_id` AS `tr_id`,`tr_detail`.`valas_id` AS `valas_id`,`tr_detail`.`nominal` AS `sales_nominal`,sum(`tr_detail`.`sheet`) AS `sales_sheet` from (`tr_detail` join `tr_header` on((`tr_detail`.`header_id` = `tr_header`.`id`))) where ((`tr_header`.`tr_id` = 2) and (`tr_header`.`status` in (1,3,4))) group by `tr_header`.`company_id`,`tr_header`.`store_id`,year(`tr_header`.`tr_date`),month(`tr_header`.`tr_date`),`tr_header`.`tr_id`,`tr_detail`.`valas_id`,`tr_detail`.`nominal`;

-- ----------------------------
-- View structure for v_stock5
-- ----------------------------
DROP VIEW IF EXISTS `v_stock5`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock5` AS select `log_a`.`company_id` AS `company_id`,`log_a`.`store_id` AS `store_id`,year(`log_a`.`tr_date`) AS `stock_year`,month(`log_a`.`tr_date`) AS `stock_month`,`log_b`.`valas_id` AS `valas_id`,`log_b`.`nominal` AS `sales_alocation_nominal`,sum(`log_b`.`sheet`) AS `sales_alocation_sheet` from (`log_b` join `log_a` on((`log_b`.`header_id` = `log_a`.`id`))) where ((`log_a`.`status` = 1) and (`log_a`.`tr_id` = 2)) group by `log_a`.`company_id`,`log_a`.`store_id`,year(`log_a`.`tr_date`),month(`log_a`.`tr_date`),`log_b`.`valas_id`,`log_b`.`nominal`;

-- ----------------------------
-- View structure for v_stock9
-- ----------------------------
DROP VIEW IF EXISTS `v_stock9`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock9` AS select `stock`.`id` AS `id`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`stock`.`valas_id` AS `valas_id`,`stock`.`company_id` AS `company_id`,`stock`.`store_id` AS `store_id`,`stock`.`stock_year` AS `stock_year`,`stock`.`stock_month` AS `stock_month`,`stock`.`nominal` AS `nominal`,`stock`.`beginning_stock_sheet` AS `beginning_stock_sheet`,if((`v_stock1`.`invin_sheet` is null),0,`v_stock1`.`invin_sheet`) AS `invin_sheet`,if((`v_stock2`.`invout_sheet` is null),0,`v_stock2`.`invout_sheet`) AS `invout_sheet`,if((`v_stock3`.`buy_sheet` is null),0,`v_stock3`.`buy_sheet`) AS `buy_sheet`,if((`v_stock4`.`sales_sheet` is null),0,`v_stock4`.`sales_sheet`) AS `sales_sheet`,if((`v_stock5`.`sales_alocation_sheet` is null),0,`v_stock5`.`sales_alocation_sheet`) AS `sales_alocation_sheet`,(((((`stock`.`beginning_stock_sheet` + if((`v_stock1`.`invin_sheet` is null),0,`v_stock1`.`invin_sheet`)) - if((`v_stock2`.`invout_sheet` is null),0,`v_stock2`.`invout_sheet`)) + if((`v_stock3`.`buy_sheet` is null),0,`v_stock3`.`buy_sheet`)) - if((`v_stock4`.`sales_sheet` is null),0,`v_stock4`.`sales_sheet`)) - if((`v_stock5`.`sales_alocation_sheet` is null),0,`v_stock5`.`sales_alocation_sheet`)) AS `last_stock_sheet`,(select `stock_price_average`.`stock_last_price` from `stock_price_average` where ((`stock_price_average`.`valas_id` = `stock`.`valas_id`) and (`stock_price_average`.`company_id` = `stock`.`company_id`) and (`stock_price_average`.`store_id` = `stock`.`store_id`) and (`stock_price_average`.`stock_year` = `stock`.`stock_year`) and (`stock_price_average`.`stock_month` = `stock_price_average`.`stock_month`)) order by `stock_price_average`.`id` desc limit 1) AS `stock_last_price`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`stock`.`status` AS `status`,`stock`.`created` AS `created`,`stock`.`createdby` AS `createdby`,`stock`.`updated` AS `updated`,`stock`.`updatedby` AS `updatedby` from ((((((((`stock` join `m_valas` on((`m_valas`.`id` = `stock`.`valas_id`))) left join `v_stock1` on(((`stock`.`company_id` = `v_stock1`.`company_id`) and (`stock`.`store_id` = `v_stock1`.`store_id`) and (`stock`.`valas_id` = `v_stock1`.`valas_id`) and (`stock`.`nominal` = `v_stock1`.`invin_nominal`) and (`stock`.`stock_year` = `v_stock1`.`stock_year`) and (`stock`.`stock_month` = `v_stock1`.`stock_month`)))) left join `v_stock2` on(((`stock`.`company_id` = `v_stock2`.`company_id`) and (`stock`.`store_id` = `v_stock2`.`store_id`) and (`stock`.`valas_id` = `v_stock2`.`valas_id`) and (`stock`.`nominal` = `v_stock2`.`invout_nominal`) and (`stock`.`stock_year` = `v_stock2`.`stock_year`) and (`stock`.`stock_month` = `v_stock2`.`stock_month`)))) left join `v_stock3` on(((`stock`.`company_id` = `v_stock3`.`company_id`) and (`stock`.`store_id` = `v_stock3`.`store_id`) and (`stock`.`valas_id` = `v_stock3`.`valas_id`) and (`stock`.`nominal` = `v_stock3`.`buy_nominal`) and (`stock`.`stock_year` = `v_stock3`.`stock_year`) and (`stock`.`stock_month` = `v_stock3`.`stock_month`)))) left join `v_stock4` on(((`stock`.`company_id` = `v_stock4`.`company_id`) and (`stock`.`store_id` = `v_stock4`.`store_id`) and (`stock`.`valas_id` = `v_stock4`.`valas_id`) and (`stock`.`nominal` = `v_stock4`.`sales_nominal`) and (`stock`.`stock_year` = `v_stock4`.`stock_year`) and (`stock`.`stock_month` = `v_stock4`.`stock_month`)))) left join `v_stock5` on(((`stock`.`company_id` = `v_stock5`.`company_id`) and (`stock`.`store_id` = `v_stock5`.`store_id`) and (`stock`.`valas_id` = `v_stock5`.`valas_id`) and (`stock`.`nominal` = `v_stock5`.`sales_alocation_nominal`) and (`stock`.`stock_year` = `v_stock5`.`stock_year`) and (`stock`.`stock_month` = `v_stock5`.`stock_month`)))) left join `m_company` on((`m_company`.`id` = `stock`.`company_id`))) left join `m_company_store` on((`m_company_store`.`id` = `stock`.`store_id`))) group by `m_valas`.`valas_code`,`m_valas`.`valas_name`,`stock`.`valas_id`,`stock`.`company_id`,`stock`.`store_id`,`stock`.`stock_year`,`stock`.`stock_month`,`stock`.`nominal`;

-- ----------------------------
-- View structure for v_stock_price
-- ----------------------------
DROP VIEW IF EXISTS `v_stock_price`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stock_price` AS select `stock_price_average`.`id` AS `id`,`stock_price_average`.`company_id` AS `company_id`,`stock_price_average`.`store_id` AS `store_id`,`stock_price_average`.`stock_date` AS `stock_date`,`stock_price_average`.`stock_year` AS `stock_year`,`stock_price_average`.`stock_month` AS `stock_month`,`stock_price_average`.`valas_id` AS `valas_id`,`stock_price_average`.`buy_tr_header_id` AS `buy_tr_header_id`,`stock_price_average`.`buy_amount` AS `buy_amount`,`stock_price_average`.`buy_price` AS `buy_price`,`stock_price_average`.`buy_total` AS `buy_total`,`stock_price_average`.`sale_tr_header_id` AS `sale_tr_header_id`,`stock_price_average`.`sale_amount` AS `sale_amount`,`stock_price_average`.`sale_price` AS `sale_price`,`stock_price_average`.`sale_total` AS `sale_total`,`stock_price_average`.`sale_average_total` AS `sale_average_total`,`stock_price_average`.`stock_last_amount` AS `stock_last_amount`,`stock_price_average`.`stock_last_price` AS `stock_last_price`,`stock_price_average`.`stock_last_total` AS `stock_last_total`,`stock_price_average`.`profit` AS `profit`,`stock_price_average`.`created` AS `created`,`stock_price_average`.`createdby` AS `createdby`,`tr_header_buy`.`tr_number` AS `buy_tr_number`,`tr_header_sale`.`tr_number` AS `sale_tr_number`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name` from (((((`stock_price_average` left join `tr_header` `tr_header_buy` on((`stock_price_average`.`buy_tr_header_id` = `tr_header_buy`.`id`))) left join `tr_header` `tr_header_sale` on((`stock_price_average`.`sale_tr_header_id` = `tr_header_sale`.`id`))) join `m_company` on((`stock_price_average`.`company_id` = `m_company`.`id`))) join `m_company_store` on((`stock_price_average`.`store_id` = `m_company_store`.`id`))) join `m_valas` on((`stock_price_average`.`valas_id` = `m_valas`.`id`)));

-- ----------------------------
-- View structure for v_stocksale
-- ----------------------------
DROP VIEW IF EXISTS `v_stocksale`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_stocksale` AS select `m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`v_stock9`.`valas_id` AS `valas_id`,`v_stock9`.`nominal` AS `nominal`,`v_stock9`.`company_id` AS `company_id`,`v_stock9`.`store_id` AS `store_id`,`m_valas`.`status` AS `status` from (`v_stock9` join `m_valas` on((`v_stock9`.`valas_id` = `m_valas`.`id`))) where ((`v_stock9`.`last_stock_sheet` > 0) and (`v_stock9`.`stock_year` = year(curdate())) and (`v_stock9`.`stock_month` = month(curdate()))) group by `v_stock9`.`company_id`,`v_stock9`.`valas_id`,`v_stock9`.`nominal`;

-- ----------------------------
-- View structure for v_summary_by_date
-- ----------------------------
DROP VIEW IF EXISTS `v_summary_by_date`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_summary_by_date` AS select `m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`tr_detail`.`valas_id` AS `valas_id`,`tr_header`.`company_id` AS `company_id`,`tr_header`.`store_id` AS `store_id`,`tr_header`.`tr_date` AS `tr_date`,sum(if(((`tr_header`.`tr_id` = 1) and (`tr_detail`.`status` in (1,3,4))),(`tr_detail`.`nominal` * `tr_detail`.`sheet`),0)) AS `buy_nominal`,sum(if(((`tr_header`.`tr_id` = 1) and (`tr_detail`.`status` in (1,3,4))),`tr_detail`.`subtotal`,0)) AS `buy_equivalent`,sum(if(((`tr_header`.`tr_id` = 2) and (`tr_detail`.`status` in (1,3,4))),(`tr_detail`.`nominal` * `tr_detail`.`sheet`),0)) AS `sales_nominal`,sum(if(((`tr_header`.`tr_id` = 2) and (`tr_detail`.`status` in (1,3,4))),`tr_detail`.`subtotal`,0)) AS `sales_equivalent` from ((`tr_detail` join `tr_header` on((`tr_header`.`id` = `tr_detail`.`header_id`))) join `m_valas` on((`tr_detail`.`valas_id` = `m_valas`.`id`))) where (`tr_detail`.`status` in (1,3,4)) group by `m_valas`.`valas_code`,`m_valas`.`valas_name`,`tr_detail`.`valas_id`,`tr_header`.`company_id`,`tr_header`.`store_id`,`tr_header`.`tr_date`;

-- ----------------------------
-- View structure for v_summary_by_month
-- ----------------------------
DROP VIEW IF EXISTS `v_summary_by_month`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_summary_by_month` AS select `m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`tr_detail`.`valas_id` AS `valas_id`,`tr_header`.`company_id` AS `company_id`,`tr_header`.`store_id` AS `store_id`,year(`tr_header`.`tr_date`) AS `tr_year`,month(`tr_header`.`tr_date`) AS `tr_month`,sum(if(((`tr_header`.`tr_id` = 1) and (`tr_detail`.`status` in (1,3,4))),(`tr_detail`.`nominal` * `tr_detail`.`sheet`),0)) AS `buy_nominal`,sum(if(((`tr_header`.`tr_id` = 1) and (`tr_detail`.`status` in (1,3,4))),`tr_detail`.`subtotal`,0)) AS `buy_equivalent`,sum(if(((`tr_header`.`tr_id` = 2) and (`tr_detail`.`status` in (1,3,4))),(`tr_detail`.`nominal` * `tr_detail`.`sheet`),0)) AS `sales_nominal`,sum(if(((`tr_header`.`tr_id` = 2) and (`tr_detail`.`status` in (1,3,4))),`tr_detail`.`subtotal`,0)) AS `sales_equivalent` from ((`tr_detail` join `tr_header` on((`tr_header`.`id` = `tr_detail`.`header_id`))) join `m_valas` on((`tr_detail`.`valas_id` = `m_valas`.`id`))) where (`tr_detail`.`status` in (1,3,4)) group by `m_valas`.`valas_code`,`m_valas`.`valas_name`,`tr_detail`.`valas_id`,`tr_header`.`company_id`,`tr_header`.`store_id`,year(`tr_header`.`tr_date`),month(`tr_header`.`tr_date`);

-- ----------------------------
-- View structure for v_summary_by_year
-- ----------------------------
DROP VIEW IF EXISTS `v_summary_by_year`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_summary_by_year` AS select `m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`tr_detail`.`valas_id` AS `valas_id`,`tr_header`.`company_id` AS `company_id`,`tr_header`.`store_id` AS `store_id`,year(`tr_header`.`tr_date`) AS `tr_year`,sum(if(((`tr_header`.`tr_id` = 1) and (`tr_detail`.`status` in (1,3,4))),(`tr_detail`.`nominal` * `tr_detail`.`sheet`),0)) AS `buy_nominal`,sum(if(((`tr_header`.`tr_id` = 1) and (`tr_detail`.`status` in (1,3,4))),`tr_detail`.`subtotal`,0)) AS `buy_equivalent`,sum(if(((`tr_header`.`tr_id` = 2) and (`tr_detail`.`status` in (1,3,4))),(`tr_detail`.`nominal` * `tr_detail`.`sheet`),0)) AS `sales_nominal`,sum(if(((`tr_header`.`tr_id` = 2) and (`tr_detail`.`status` in (1,3,4))),`tr_detail`.`subtotal`,0)) AS `sales_equivalent` from ((`tr_detail` join `tr_header` on((`tr_header`.`id` = `tr_detail`.`header_id`))) join `m_valas` on((`tr_detail`.`valas_id` = `m_valas`.`id`))) where (`tr_detail`.`status` in (1,3,4)) group by `m_valas`.`valas_code`,`m_valas`.`valas_name`,`tr_detail`.`valas_id`,`tr_header`.`company_id`,`tr_header`.`store_id`,year(`tr_header`.`tr_date`);

-- ----------------------------
-- View structure for v_tr_detail
-- ----------------------------
DROP VIEW IF EXISTS `v_tr_detail`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_tr_detail` AS select `tr_detail`.`id` AS `id`,`tr_detail`.`sequence` AS `sequence`,`tr_detail`.`valas_id` AS `valas_id`,`m_valas`.`valas_code` AS `valas_code`,`m_valas`.`valas_name` AS `valas_name`,`tr_detail`.`nominal` AS `nominal`,`tr_detail`.`sheet` AS `sheet`,`tr_detail`.`price` AS `price`,`tr_detail`.`subtotal` AS `subtotal`,`tr_detail`.`status` AS `status`,`tr_detail`.`header_id` AS `header_id`,`tr_header`.`tr_id` AS `tr_id`,`tr_header`.`tr_date` AS `tr_date`,`tr_header`.`company_id` AS `company_id`,`tr_header`.`store_id` AS `store_id`,`tr_header`.`customer_id` AS `customer_id`,`tr_detail`.`created` AS `created`,`tr_detail`.`updated` AS `updated`,`tr_detail`.`createdby` AS `createdby`,`tr_detail`.`updatedby` AS `updatedby` from ((`tr_detail` join `tr_header` on((`tr_detail`.`header_id` = `tr_header`.`id`))) left join `m_valas` on((`tr_detail`.`valas_id` = `m_valas`.`id`)));

-- ----------------------------
-- View structure for v_tr_header
-- ----------------------------
DROP VIEW IF EXISTS `v_tr_header`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_tr_header` AS select `tr_header`.`id` AS `id`,`tr_header`.`tr_id` AS `tr_id`,`tr_header`.`tr_date` AS `tr_date`,`tr_header`.`tr_number` AS `tr_number`,`tr_header`.`customer_id` AS `customer_id`,`m_customer`.`customer_code` AS `customer_code`,`m_customer`.`customer_name` AS `customer_name`,`m_customer`.`customer_address` AS `customer_address`,`m_nationality`.`nationality_code` AS `nationality_code`,`tr_header`.`payment_type_id` AS `payment_type_id`,`m_payment_type`.`payment_type_name` AS `payment_type_name`,`tr_header`.`flight_destination` AS `flight_destination`,`flight_destination`.`airport_code` AS `flight_destination_code`,`flight_destination`.`airport_desc` AS `flight_destination_desc`,`tr_header`.`flight_barcode` AS `flight_barcode`,`tr_header`.`flight_no` AS `flight_no`,`tr_header`.`tr_description` AS `tr_description`,`tr_header`.`cashier_id` AS `cashier_id`,`usr1`.`fullname` AS `cashier_name`,`tr_header`.`company_id` AS `company_id`,`m_company`.`company_name` AS `company_name`,`m_company`.`company_address` AS `company_address`,`m_company`.`company_city` AS `company_city`,`m_company`.`company_type` AS `company_type`,`m_company_store`.`airport_id` AS `airport_id`,`m_airport`.`airport_code` AS `airport_code`,`m_airport`.`airport_desc` AS `airport_desc`,`m_company_store`.`airport_terminal` AS `airport_terminal`,`tr_header`.`store_id` AS `store_id`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address`,`m_company_store`.`store_reference_id` AS `store_reference_id`,`m_transaction`.`title` AS `tr_title`,`tr_header`.`status` AS `status`,(select (case when (`tr_header`.`status` in (3,4)) then 'Closed' when (`tr_header`.`status` = 2) then 'Canceled' else 'Open' end)) AS `status_name`,`tr_header`.`created` AS `created`,`tr_header`.`updated` AS `updated`,`tr_header`.`createdby` AS `createdby`,`tr_header`.`updatedby` AS `updatedby`,`usr2`.`fullname` AS `createdby_name`,`usr3`.`fullname` AS `updatedby_name` from (((((((((((`tr_header` join `m_transaction` on((`tr_header`.`tr_id` = `m_transaction`.`id`))) join `auth_users` `usr1` on((`tr_header`.`cashier_id` = `usr1`.`id`))) join `auth_users` `usr2` on((`tr_header`.`createdby` = `usr2`.`id`))) left join `auth_users` `usr3` on((`tr_header`.`updatedby` = `usr3`.`id`))) join `m_customer` on((`tr_header`.`customer_id` = `m_customer`.`id`))) left join `m_nationality` on((`m_customer`.`nationality_id` = `m_nationality`.`id`))) join `m_company` on((`tr_header`.`company_id` = `m_company`.`id`))) left join `m_airport` `flight_destination` on((`flight_destination`.`id` = `tr_header`.`flight_destination`))) join `m_company_store` on((`m_company_store`.`id` = `tr_header`.`store_id`))) join `m_airport` on((`m_airport`.`id` = `m_company_store`.`airport_id`))) join `m_payment_type` on((`m_payment_type`.`id` = `tr_header`.`payment_type_id`)));

-- ----------------------------
-- View structure for v_trx_api_ap_get
-- ----------------------------
DROP VIEW IF EXISTS `v_trx_api_ap_get`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_trx_api_ap_get` AS select `trx_api_ap_get`.`id` AS `id`,`trx_api_ap_get`.`company_id` AS `company_id`,`trx_api_ap_get`.`store_id` AS `store_id`,`trx_api_ap_get`.`tr_id` AS `tr_id`,`tr_header`.`id` AS `header_id`,`tr_header`.`ref_id` AS `ref_id`,`tr_header`.`customer_id` AS `customer_id`,`trx_api_ap_get`.`invoice_number` AS `invoice_number`,`trx_api_ap_get`.`transaction_date` AS `transaction_date`,`trx_api_ap_get`.`transaction_time` AS `transaction_time`,`trx_api_ap_get`.`status` AS `status`,count(`trx_api_ap_get`.`invoice_number`) AS `total_data`,`tr_header`.`created` AS `created`,`tr_header`.`updated` AS `updated`,`auth_users`.`fullname` AS `createdby_name` from ((`trx_api_ap_get` join `tr_header` on(((`tr_header`.`tr_number` = `trx_api_ap_get`.`invoice_number`) and (`tr_header`.`tr_id` = `trx_api_ap_get`.`tr_id`)))) join `auth_users` on((`auth_users`.`id` = `tr_header`.`createdby`))) group by `trx_api_ap_get`.`company_id`,`trx_api_ap_get`.`store_id`,`trx_api_ap_get`.`tr_id`,`tr_header`.`id`,`tr_header`.`ref_id`,`tr_header`.`customer_id`,`trx_api_ap_get`.`invoice_number`,`trx_api_ap_get`.`transaction_date`,`trx_api_ap_get`.`transaction_time`;

-- ----------------------------
-- View structure for v_trx_api_ap_get_detail
-- ----------------------------
DROP VIEW IF EXISTS `v_trx_api_ap_get_detail`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_trx_api_ap_get_detail` AS select `trx_api_ap_get`.`id` AS `id`,`trx_api_ap_get`.`company_id` AS `company_id`,`trx_api_ap_get`.`store_id` AS `store_id`,`trx_api_ap_get`.`tr_id` AS `tr_id`,`tr_header`.`id` AS `header_id`,`tr_header`.`ref_id` AS `ref_id`,`trx_api_ap_get`.`invoice_number` AS `invoice_number`,`trx_api_ap_get`.`transaction_date` AS `transaction_date`,`trx_api_ap_get`.`transaction_time` AS `transaction_time`,`trx_api_ap_get`.`created` AS `created`,`trx_api_ap_get`.`updated` AS `updated`,`trx_api_ap_get`.`createdby` AS `createdby`,`trx_api_ap_get`.`updatedby` AS `updatedby`,`auth_users`.`fullname` AS `createdby_name`,`trx_api_ap_get`.`sequence` AS `sequence`,`trx_api_ap_get`.`item_code` AS `item_id`,`m_valas`.`valas_code` AS `item_code`,`trx_api_ap_get`.`item_name` AS `item_name`,`trx_api_ap_get`.`item_quantity` AS `item_quantity`,`trx_api_ap_get`.`item_price_unit` AS `item_price_unit`,`trx_api_ap_get`.`item_price_amount` AS `item_price_amount`,`trx_api_ap_get`.`item_total_price_amount` AS `item_total_price_amount`,`trx_api_ap_get`.`item_vat` AS `item_vat`,`trx_api_ap_get`.`transaction_amount` AS `transaction_amount`,`trx_api_ap_get`.`item_barcode` AS `item_barcode`,`trx_api_ap_get`.`item_category_name` AS `item_category_name`,`trx_api_ap_get`.`item_category_code` AS `item_category_code`,`trx_api_ap_get`.`item_unit` AS `item_unit`,`trx_api_ap_get`.`item_discount` AS `item_discount`,`trx_api_ap_get`.`item_tax` AS `item_tax`,`trx_api_ap_get`.`item_total_discount` AS `item_total_discount`,`trx_api_ap_get`.`item_total_vat` AS `item_total_vat`,`trx_api_ap_get`.`item_total_tax` AS `item_total_tax`,`trx_api_ap_get`.`item_total_service_charge` AS `item_total_service_charge`,`trx_api_ap_get`.`currency` AS `currency`,`trx_api_ap_get`.`rate` AS `rate`,`trx_api_ap_get`.`payment_type` AS `payment_type`,`trx_api_ap_get`.`payment_by` AS `payment_by`,`trx_api_ap_get`.`username` AS `username`,`trx_api_ap_get`.`buyer_barcode` AS `buyer_barcode`,`trx_api_ap_get`.`buyer_name` AS `buyer_name`,`trx_api_ap_get`.`buyer_flight_no` AS `buyer_flight_no`,`trx_api_ap_get`.`buyer_destination` AS `buyer_destination`,`trx_api_ap_get`.`buyer_nationality` AS `buyer_nationality`,`trx_api_ap_get`.`remark` AS `remark`,`trx_api_ap_get`.`invoice_tax` AS `invoice_tax`,`trx_api_ap_get`.`tax_id` AS `tax_id`,`trx_api_ap_get`.`payment_name` AS `payment_name`,`trx_api_ap_get`.`payment_time` AS `payment_time`,`trx_api_ap_get`.`distance` AS `distance`,`trx_api_ap_get`.`journey_time` AS `journey_time`,`m_company_store`.`store_reference_id` AS `store_reference_id`,`m_company_store`.`store_name` AS `store_name`,`m_company_store`.`store_address` AS `store_address` from ((((`trx_api_ap_get` join `tr_header` on(((`tr_header`.`tr_number` = `trx_api_ap_get`.`invoice_number`) and (`tr_header`.`tr_id` = `trx_api_ap_get`.`tr_id`)))) join `m_valas` on((`m_valas`.`id` = `trx_api_ap_get`.`item_code`))) join `auth_users` on((`auth_users`.`id` = `trx_api_ap_get`.`createdby`))) left join `m_company_store` on((`m_company_store`.`id` = `trx_api_ap_get`.`store_id`)));

SET FOREIGN_KEY_CHECKS = 1;
